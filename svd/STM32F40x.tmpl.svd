#ifdef STM32F405
#define __HAVE_FSMC
#endif

#ifdef STM32F407
#define __HAVE_FSMC
#define __HAVE_ETHERNET
#define __HAVE_DCMI
#endif

#ifdef STM32F415
#define __HAVE_FSMC
#define __HAVE_CRYPTO
#endif

#ifdef STM32F417
#define __HAVE_FSMC
#define __HAVE_ETHERNET
#define __HAVE_DCMI
#define __HAVE_CRYPTO
#endif

#ifdef STM32F427
#define __HAVE_FMC
#define __HAVE_ETHERNET
#define __HAVE_DCMI
#define __HAVE_SAI
#endif

#ifdef STM32F437
#define __HAVE_FMC
#define __HAVE_ETHERNET
#define __HAVE_DCMI
#define __HAVE_SAI
#define __HAVE_CRYPTO
#endif

<?xml version="1.0" encoding="utf-8" standalone="no"?>
<device schemaVersion="1.1"
xmlns:xs="http://www.w3.org/2001/XMLSchema-instance"
xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd">
#if defined(STM32F405)
  <name>STM32F405</name>
#elif defined(STM32F407)
  <name>STM32F407</name>
#elif defined(STM32F415)
  <name>STM32F415</name>
#elif defined(STM32F417)
  <name>STM32F417</name>
#elif defined(STM32F427)
  <name>STM32F427</name>
#elif defined(STM32F437)
  <name>STM32F437</name>
#else
#warning "Generic 40x chosen"
  <name>STM32F40x</name>
#endif
  <cpu>
    <name>CM4</name>
    <revision>r0p0</revision>
    <endian>little</endian>
    <fpuPresent>true</fpuPresent>
    <mpuPresent>true</mpuPresent>
    <vtorPresent>true</vtorPresent>
    <nvicPrioBits>4</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <version>1.5</version>
#if defined(STM32F405)
  <description>STM32F405</description>
#elif defined(STM32F407)
  <description>STM32F407</description>
#elif defined(STM32F415)
  <description>STM32F415</description>
#elif defined(STM32F417)
  <description>STM32F417</description>
#elif defined(STM32F427)
  <description>STM32F427</description>
#elif defined(STM32F437)
  <description>STM32F437</description>
#else
  <description>STM32F40x</description>
#endif
  <!--Bus Interface Properties-->
  <!--Cortex-M4 is byte addressable-->
  <addressUnitBits>8</addressUnitBits>
  <!--the maximum data bit width accessible within a single transfer-->
  <width>32</width>
  <!--Register Default Properties-->
  <size>0x20</size>
  <resetValue>0x0</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>RNG</name>
      <baseAddress>0x50060800</baseAddress>
      <interrupt>
        <name>HASH_RNG</name>
        <description>Hash and RNG global interrupt</description>
        <value>80</value>
      </interrupt>
#include "rng.svd.frag"
    </peripheral>
#ifdef __HAVE_CRYPTO
    <peripheral>
      <name>HASH</name>
      <baseAddress>0x50060400</baseAddress>
      <interrupt>
        <name>HASH_RNG</name>
        <description>Hash and RNG global interrupt</description>
        <value>80</value>
      </interrupt>
#include "hash.svd.frag"
    </peripheral>
    <peripheral>
      <name>CRYP</name>
      <baseAddress>0x50060000</baseAddress>
      <interrupt>
        <name>CRYP</name>
        <description>CRYP crypto global interrupt</description>
        <value>79</value>
      </interrupt>
#include "crypt.svd.frag"
    </peripheral>
#endif
#ifdef __HAVE_DCMI
    <peripheral>
      <name>DCMI</name>
      <baseAddress>0x50050000</baseAddress>
      <interrupt>
        <name>DCMI</name>
        <description>DCMI global interrupt</description>
        <value>78</value>
      </interrupt>
#include "dcmi.svd.frag"
    </peripheral>
#endif
#ifdef __HAVE_FSMC
    <peripheral>
      <name>FSMC</name>
      <baseAddress>0xA0000000</baseAddress>
      <interrupt>
        <name>FSMC</name>
        <description>FSMC global interrupt</description>
        <value>48</value>
      </interrupt>
#include "fmc.svd.frag"
    </peripheral>
#endif
#ifdef __HAVE_FMC
    <peripheral>
      <name>FMC</name>
      <baseAddress>0xA0000000</baseAddress>
      <interrupt>
        <name>FMC</name>
        <description>FMC global interrupt</description>
        <value>48</value>
      </interrupt>
#define __FMC_HAVE_SDRAM
#include "fmc.svd.frag"
    </peripheral>
#endif
    <peripheral>
      <name>DBG</name>
      <baseAddress>0xE0042000</baseAddress>
#include "dbg.svd.frag"
    </peripheral>
    <peripheral>
      <name>DMA2</name>
      <baseAddress>0x40026400</baseAddress>
      <interrupt>
        <name>DMA2_Stream0</name>
        <description>DMA2 Stream0 global interrupt</description>
        <value>56</value>
      </interrupt>
      <interrupt>
        <name>DMA2_Stream1</name>
        <description>DMA2 Stream1 global interrupt</description>
        <value>57</value>
      </interrupt>
      <interrupt>
        <name>DMA2_Stream2</name>
        <description>DMA2 Stream2 global interrupt</description>
        <value>58</value>
      </interrupt>
      <interrupt>
        <name>DMA2_Stream3</name>
        <description>DMA2 Stream3 global interrupt</description>
        <value>59</value>
      </interrupt>
      <interrupt>
        <name>DMA2_Stream4</name>
        <description>DMA2 Stream4 global interrupt</description>
        <value>60</value>
      </interrupt>
      <interrupt>
        <name>DMA2_Stream5</name>
        <description>DMA2 Stream5 global interrupt</description>
        <value>68</value>
      </interrupt>
      <interrupt>
        <name>DMA2_Stream6</name>
        <description>DMA2 Stream6 global interrupt</description>
        <value>69</value>
      </interrupt>
      <interrupt>
        <name>DMA2_Stream7</name>
        <description>DMA2 Stream7 global interrupt</description>
        <value>70</value>
      </interrupt>
#include "dma.svd.frag"
    </peripheral>
    <peripheral derivedFrom="DMA2">
      <name>DMA1</name>
      <baseAddress>0x40026000</baseAddress>
      <interrupt>
        <name>DMA1_Stream0</name>
        <description>DMA1 Stream0 global interrupt</description>
        <value>11</value>
      </interrupt>
      <interrupt>
        <name>DMA1_Stream1</name>
        <description>DMA1 Stream1 global interrupt</description>
        <value>12</value>
      </interrupt>
      <interrupt>
        <name>DMA1_Stream2</name>
        <description>DMA1 Stream2 global interrupt</description>
        <value>13</value>
      </interrupt>
      <interrupt>
        <name>DMA1_Stream3</name>
        <description>DMA1 Stream3 global interrupt</description>
        <value>14</value>
      </interrupt>
      <interrupt>
        <name>DMA1_Stream4</name>
        <description>DMA1 Stream4 global interrupt</description>
        <value>15</value>
      </interrupt>
      <interrupt>
        <name>DMA1_Stream5</name>
        <description>DMA1 Stream5 global interrupt</description>
        <value>16</value>
      </interrupt>
      <interrupt>
        <name>DMA1_Stream6</name>
        <description>DMA1 Stream6 global interrupt</description>
        <value>17</value>
      </interrupt>
      <interrupt>
        <name>DMA1_Stream7</name>
        <description>DMA1 Stream7 global interrupt</description>
        <value>47</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>RCC</name>
      <baseAddress>0x40023800</baseAddress>
      <interrupt>
        <name>RCC</name>
        <description>RCC global interrupt</description>
        <value>5</value>
      </interrupt>
#include "rcc.svd.frag"
    </peripheral>
    <peripheral>
      <name>GPIOI</name>
      <baseAddress>0x40022000</baseAddress>
#include "gpio.svd.frag"
    </peripheral>
    <peripheral derivedFrom="GPIOI">
      <name>GPIOH</name>
      <baseAddress>0x40021C00</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIOI">
      <name>GPIOG</name>
      <baseAddress>0x40021800</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIOI">
      <name>GPIOF</name>
      <baseAddress>0x40021400</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIOI">
      <name>GPIOE</name>
      <baseAddress>0x40021000</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIOI">
      <name>GPIOD</name>
      <baseAddress>0X40020C00</baseAddress>
    </peripheral>
    <peripheral derivedFrom="GPIOI">
      <name>GPIOC</name>
      <baseAddress>0x40020800</baseAddress>
    </peripheral>
    <peripheral>
      <name>GPIOB</name>
      <baseAddress>0x40020400</baseAddress>
#define __GPIO_B
#include "gpio.svd.frag"
    </peripheral>
    <peripheral>
      <name>GPIOA</name>
      <baseAddress>0x40020000</baseAddress>
#define __GPIO_A
#include "gpio.svd.frag"
    </peripheral>
    <peripheral>
      <name>SYSCFG</name>
      <baseAddress>0x40013800</baseAddress>
#include "syscfg.svd.frag"
    </peripheral>
    <peripheral>
      <name>SPI1</name>
      <baseAddress>0x40013000</baseAddress>
      <interrupt>
        <name>SPI1</name>
        <description>SPI1 global interrupt</description>
        <value>35</value>
      </interrupt>
#include "spi.svd.frag"
    </peripheral>
    <peripheral derivedFrom="SPI1">
      <name>SPI2</name>
      <baseAddress>0x40003800</baseAddress>
      <interrupt>
        <name>SPI2</name>
        <description>SPI2 global interrupt</description>
        <value>36</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI1">
      <name>SPI3</name>
      <baseAddress>0x40003C00</baseAddress>
      <interrupt>
        <name>SPI3</name>
        <description>SPI3 global interrupt</description>
        <value>51</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI1">
      <name>I2S2ext</name>
      <baseAddress>0x40003400</baseAddress>
    </peripheral>
    <peripheral derivedFrom="SPI1">
      <name>I2S3ext</name>
      <baseAddress>0x40004000</baseAddress>
    </peripheral>
#if defined(STM32F427) || defined(STM32F437)
    <peripheral derivedFrom="SPI1">
      <name>SPI4</name>
      <baseAddress>0x40013400</baseAddress>
      <interrupt>
        <name>SPI4</name>
        <description>SPI 4 global interrupt</description>
        <value>84</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI1">
      <name>SPI5</name>
      <baseAddress>0x40015000</baseAddress>
      <interrupt>
        <name>SPI5</name>
        <description>SPI 5 global interrupt</description>
        <value>85</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="SPI1">
      <name>SPI6</name>
      <baseAddress>0x40015400</baseAddress>
      <interrupt>
        <name>SPI6</name>
        <description>SPI 6 global interrupt</description>
        <value>86</value>
      </interrupt>
    </peripheral>
#endif
    <peripheral>
      <name>SDIO</name>
      <baseAddress>0x40012C00</baseAddress>
      <interrupt>
        <name>SDIO</name>
        <description>SDIO global interrupt</description>
        <value>49</value>
      </interrupt>
#include "sdio.svd.frag"
    </peripheral>
    <peripheral>
      <name>ADC1</name>
      <baseAddress>0x40012000</baseAddress>
      <interrupt>
        <name>ADC</name>
        <description>ADC1 global interrupt</description>
        <value>18</value>
      </interrupt>
#include "adc_n.svd.frag"
    </peripheral>
    <peripheral derivedFrom="ADC1">
      <name>ADC2</name>
      <baseAddress>0x40012100</baseAddress>
      <interrupt>
        <name>ADC</name>
        <description>ADC2 global interrupts</description>
        <value>18</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="ADC1">
      <name>ADC3</name>
      <baseAddress>0x40012200</baseAddress>
      <interrupt>
        <name>ADC</name>
        <description>ADC3 global interrupts</description>
        <value>18</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>USART6</name>
      <baseAddress>0x40011400</baseAddress>
      <interrupt>
        <name>USART6</name>
        <description>USART6 global interrupt</description>
        <value>71</value>
      </interrupt>
#include "usart.svd.frag"
    </peripheral>
    <peripheral derivedFrom="USART6">
      <name>USART1</name>
      <baseAddress>0x40011000</baseAddress>
      <interrupt>
        <name>USART1</name>
        <description>USART1 global interrupt</description>
        <value>37</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="USART6">
      <name>USART2</name>
      <baseAddress>0x40004400</baseAddress>
      <interrupt>
        <name>USART2</name>
        <description>USART2 global interrupt</description>
        <value>38</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="USART6">
      <name>USART3</name>
      <baseAddress>0x40004800</baseAddress>
      <interrupt>
        <name>USART3</name>
        <description>USART3 global interrupt</description>
        <value>39</value>
      </interrupt>
    </peripheral>
#if defined(STM32F427) || defined(STM32F437)
    <peripheral derivedFrom="UART4">
      <name>UART7</name>
      <baseAddress>0x40007800</baseAddress>
      <interrupt>
        <name>UART7</name>
        <description>UART 7 global interrupt</description>
        <value>82</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="UART4">
      <name>UART8</name>
      <baseAddress>0x40007C00</baseAddress>
      <interrupt>
        <name>UART8</name>
        <description>UART 8 global interrupt</description>
        <value>83</value>
      </interrupt>
    </peripheral>
#endif
    <peripheral>
      <name>DAC</name>
      <baseAddress>0x40007400</baseAddress>
      <interrupt>
        <name>TIM6_DAC</name>
        <description>TIM6 global interrupt, DAC1 and DAC2 underrun
        error interrupt</description>
        <value>54</value>
      </interrupt>
#include "dac.svd.frag"
    </peripheral>
    <peripheral>
      <name>PWR</name>
      <baseAddress>0x40007000</baseAddress>
      <interrupt>
        <name>PVD</name>
        <description>PVD through EXTI line detection
        interrupt</description>
        <value>1</value>
      </interrupt>
#include "pwr.svd.frag"
    </peripheral>
    <peripheral>
      <name>I2C3</name>
      <baseAddress>0x40005C00</baseAddress>
      <interrupt>
        <name>I2C3_EV</name>
        <description>I2C3 event interrupt</description>
        <value>72</value>
      </interrupt>
      <interrupt>
        <name>I2C3_ER</name>
        <description>I2C3 error interrupt</description>
        <value>73</value>
      </interrupt>
#include "i2c.svd.frag"
    </peripheral>
    <peripheral derivedFrom="I2C3">
      <name>I2C2</name>
      <baseAddress>0x40005800</baseAddress>
      <interrupt>
        <name>I2C2_EV</name>
        <description>I2C2 event interrupt</description>
        <value>33</value>
      </interrupt>
      <interrupt>
        <name>I2C2_ER</name>
        <description>I2C2 error interrupt</description>
        <value>34</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="I2C3">
      <name>I2C1</name>
      <baseAddress>0x40005400</baseAddress>
      <interrupt>
        <name>I2C1_EV</name>
        <description>I2C1 event interrupt</description>
        <value>31</value>
      </interrupt>
      <interrupt>
        <name>I2C1_ER</name>
        <description>I2C1 error interrupt</description>
        <value>32</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>IWDG</name>
      <baseAddress>0x40003000</baseAddress>
#include "iwdg.svd.frag"
    </peripheral>
    <peripheral>
      <name>WWDG</name>
      <baseAddress>0x40002C00</baseAddress>
      <interrupt>
        <name>WWDG</name>
        <description>Window Watchdog interrupt</description>
        <value>0</value>
      </interrupt>
#include "wwdg.svd.frag"
    </peripheral>
    <peripheral>
      <name>RTC</name>
      <baseAddress>0x40002800</baseAddress>
      <interrupt>
        <name>RTC_WKUP</name>
        <description>RTC Wakeup interrupt through the EXTI
        line</description>
        <value>3</value>
      </interrupt>
      <interrupt>
        <name>RTC_Alarm</name>
        <description>RTC Alarms (A and B) through EXTI line
        interrupt</description>
        <value>41</value>
      </interrupt>
#include "rtc.svd.frag"
    </peripheral>
    <peripheral>
      <name>UART4</name>
      <baseAddress>0x40004C00</baseAddress>
      <interrupt>
        <name>UART4</name>
        <description>UART4 global interrupt</description>
        <value>52</value>
      </interrupt>
#define __USART_ASYNCHRONOUS_ONLY
#include "usart.svd.frag"
    </peripheral>
    <peripheral derivedFrom="UART4">
      <name>UART5</name>
      <baseAddress>0x40005000</baseAddress>
      <interrupt>
        <name>UART5</name>
        <description>UART5 global interrupt</description>
        <value>53</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>C_ADC</name>
      <baseAddress>0x40012300</baseAddress>
#include "adc_c.svd.frag"
    </peripheral>
    <peripheral>
      <name>TIM1</name>
      <description>Advanced-timers</description>
      <baseAddress>0x40010000</baseAddress>
      <interrupt>
        <name>TIM1_BRK_TIM9</name>
        <description>TIM1 Break interrupt and TIM9 global
        interrupt</description>
        <value>24</value>
      </interrupt>
      <interrupt>
        <name>TIM1_UP_TIM10</name>
        <description>TIM1 Update interrupt and TIM10 global
        interrupt</description>
        <value>25</value>
      </interrupt>
      <interrupt>
        <name>TIM1_TRG_COM_TIM11</name>
        <description>TIM1 Trigger and Commutation interrupts and
        TIM11 global interrupt</description>
        <value>26</value>
      </interrupt>
      <interrupt>
        <name>TIM1_CC</name>
        <description>TIM1 Capture Compare interrupt</description>
        <value>27</value>
      </interrupt>
#define __TIMER_ADVANCED
#include "timer.svd.frag"
    </peripheral>
    <peripheral derivedFrom="TIM1">
      <name>TIM8</name>
      <baseAddress>0x40010400</baseAddress>
      <interrupt>
        <name>TIM8_BRK_TIM12</name>
        <description>TIM8 Break interrupt and TIM12 global
        interrupt</description>
        <value>43</value>
      </interrupt>
      <interrupt>
        <name>TIM8_UP_TIM13</name>
        <description>TIM8 Update interrupt and TIM13 global
        interrupt</description>
        <value>44</value>
      </interrupt>
      <interrupt>
        <name>TIM8_TRG_COM_TIM14</name>
        <description>TIM8 Trigger and Commutation interrupts and
        TIM14 global interrupt</description>
        <value>45</value>
      </interrupt>
      <interrupt>
        <name>TIM8_CC</name>
        <description>TIM8 Capture Compare interrupt</description>
        <value>46</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>TIM2</name>
      <description>General purpose timers</description>
      <baseAddress>0x40000000</baseAddress>
      <interrupt>
        <name>TIM2</name>
        <description>TIM2 global interrupt</description>
        <value>28</value>
      </interrupt>
#define __TIMER_TIM2
#define __TIMER_GP_WITH_TRIG
#include "timer.svd.frag"
    </peripheral>
    <peripheral>
      <name>TIM3</name>
      <description>General purpose timers</description>
      <baseAddress>0x40000400</baseAddress>
      <interrupt>
        <name>TIM3</name>
        <description>TIM3 global interrupt</description>
        <value>29</value>
      </interrupt>
#define __TIMER_GP_WITH_TRIG      
#include "timer.svd.frag"
    </peripheral>
    <peripheral derivedFrom="TIM3">
      <name>TIM4</name>
      <baseAddress>0x40000800</baseAddress>
      <interrupt>
        <name>TIM4</name>
        <description>TIM4 global interrupt</description>
        <value>30</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>TIM5</name>
      <description>General-purpose-timers</description>
      <baseAddress>0x40000C00</baseAddress>
      <interrupt>
        <name>TIM5</name>
        <description>TIM5 global interrupt</description>
        <value>50</value>
      </interrupt>
#define __TIMER_TIM5
#define __TIMER_GP_WITH_TRIG
#include "timer.svd.frag"
    </peripheral>
    <peripheral>
      <name>TIM9</name>
      <description>General purpose timers</description>
      <baseAddress>0x40014000</baseAddress>
      <interrupt>
        <name>TIM1_BRK_TIM9</name>
        <description>TIM1 Break interrupt and TIM9 global
        interrupt</description>
        <value>24</value>
      </interrupt>
#define __TIMER_GP_WITH_SYNC
#include "timer.svd.frag"
    </peripheral>
    <peripheral derivedFrom="TIM9">
      <name>TIM12</name>
      <baseAddress>0x40001800</baseAddress>
      <interrupt>
        <name>TIM8_BRK_TIM12</name>
        <description>TIM8 Break interrupt and TIM12 global
        interrupt</description>
        <value>43</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>TIM10</name>
      <description>General-purpose-timers</description>
      <baseAddress>0x40014400</baseAddress>
      <interrupt>
        <name>TIM1_UP_TIM10</name>
        <description>TIM1 Update interrupt and TIM10 global
        interrupt</description>
        <value>25</value>
      </interrupt>
#define __TIMER_GP
#include "timer.svd.frag"
    </peripheral>
    <peripheral derivedFrom="TIM10">
      <name>TIM13</name>
      <baseAddress>0x40001C00</baseAddress>
      <interrupt>
        <name>TIM8_UP_TIM13</name>
        <description>TIM8 Update interrupt and TIM13 global
        interrupt</description>
        <value>44</value>
      </interrupt>
    </peripheral>
    <peripheral derivedFrom="TIM10">
      <name>TIM14</name>
      <baseAddress>0x40002000</baseAddress>
      <interrupt>
        <name>TIM8_TRG_COM_TIM14</name>
        <description>TIM8 Trigger and Commutation interrupts and
        TIM14 global interrupt</description>
        <value>45</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>TIM11</name>
      <description>General-purpose-timers</description>
      <baseAddress>0x40014800</baseAddress>
      <interrupt>
        <name>TIM1_TRG_COM_TIM11</name>
        <description>TIM1 Trigger and Commutation interrupts and
        TIM11 global interrupt</description>
        <value>26</value>
      </interrupt>
#define __TIMER_TIM11
#define __TIMER_GP
#include "timer.svd.frag"
    </peripheral>
    <peripheral>
      <name>TIM6</name>
      <description>Basic timers</description>
      <baseAddress>0x40001000</baseAddress>
      <interrupt>
        <name>TIM6_DAC</name>
        <description>TIM6 global interrupt, DAC1 and DAC2 underrun
        error interrupt</description>
        <value>54</value>
      </interrupt>
#include "timer.svd.frag"
    </peripheral>
    <peripheral derivedFrom="TIM6">
      <name>TIM7</name>
      <baseAddress>0x40001400</baseAddress>
      <interrupt>
        <name>TIM7</name>
        <description>TIM7 global interrupt</description>
        <value>55</value>
      </interrupt>
    </peripheral>
#ifdef __HAVE_ETHERNET
    <peripheral>
      <name>Ethernet_MAC</name>
      <baseAddress>0x40028000</baseAddress>
      <interrupt>
        <name>ETH</name>
        <description>Ethernet global interrupt</description>
        <value>61</value>
      </interrupt>
      <interrupt>
        <name>ETH_WKUP</name>
        <description>Ethernet Wakeup through EXTI line
        interrupt</description>
        <value>62</value>
      </interrupt>
#include "enet_mac.svd.frag"
    </peripheral>
    <peripheral>
      <name>Ethernet_MMC</name>
      <baseAddress>0x40028100</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x400</size>
        <usage>registers</usage>
      </addressBlock>
#include "enet_mmc.svd.frag"
    </peripheral>
    <peripheral>
      <name>Ethernet_PTP</name>
      <baseAddress>0x40028700</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x400</size>
        <usage>registers</usage>
      </addressBlock>
#include "enet_ptp.svd.frag"
    </peripheral>
    <peripheral>
      <name>Ethernet_DMA</name>
      <baseAddress>0x40029000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x400</size>
        <usage>registers</usage>
      </addressBlock>
#include "enet_dma.svd.frag"
    </peripheral>
#endif
    <peripheral>
      <name>CRC</name>
      <baseAddress>0x40023000</baseAddress>
#include "crc.svd.frag"
    </peripheral>
    <peripheral>
      <name>OTG_FS_GLOBAL</name>
      <groupName>USB_OTG_FS</groupName>
      <baseAddress>0x50000000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x400</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>OTG_FS_WKUP</name>
        <description>USB On-The-Go FS Wakeup through EXTI line
        interrupt</description>
        <value>42</value>
      </interrupt>
      <interrupt>
        <name>OTG_FS</name>
        <description>USB On The Go FS global
        interrupt</description>
        <value>67</value>
      </interrupt>
#include "usbotg_global.svd.frag"
    </peripheral>
    <peripheral>
      <name>OTG_FS_HOST</name>
      <groupName>USB_OTG_FS</groupName>
      <baseAddress>0x50000400</baseAddress>
#include "usbotg_host.svd.frag"
    </peripheral>
    <peripheral>
      <name>OTG_FS_DEVICE</name>
      <groupName>USB_OTG_FS</groupName>
      <baseAddress>0x50000800</baseAddress>
#include "usbotg_device.svd.frag"
    </peripheral>
    <peripheral>
      <name>OTG_FS_PWRCLK</name>
      <description>USB on the go full speed</description>
      <groupName>USB_OTG_FS</groupName>
      <baseAddress>0x50000E00</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x400</size>
        <usage>registers</usage>
      </addressBlock>
#include "usbotg_pwrclk.svd.frag"
    </peripheral>
    <peripheral>
      <name>CAN1</name>
      <baseAddress>0x40006400</baseAddress>
      <interrupt>
        <name>CAN1_TX</name>
        <description>CAN1 TX interrupts</description>
        <value>19</value>
      </interrupt>
      <interrupt>
        <name>CAN1_RX0</name>
        <description>CAN1 RX0 interrupts</description>
        <value>20</value>
      </interrupt>
      <interrupt>
        <name>CAN1_RX1</name>
        <description>CAN1 RX1 interrupts</description>
        <value>21</value>
      </interrupt>
      <interrupt>
        <name>CAN1_SCE</name>
        <description>CAN1 SCE interrupt</description>
        <value>22</value>
      </interrupt>
#include "can.svd.frag"
    </peripheral>
    <peripheral derivedFrom="CAN1">
      <name>CAN2</name>
      <baseAddress>0x40006800</baseAddress>
      <interrupt>
        <name>CAN2_TX</name>
        <description>CAN2 TX interrupts</description>
        <value>63</value>
      </interrupt>
      <interrupt>
        <name>CAN2_RX0</name>
        <description>CAN2 RX0 interrupts</description>
        <value>64</value>
      </interrupt>
      <interrupt>
        <name>CAN2_RX1</name>
        <description>CAN2 RX1 interrupts</description>
        <value>65</value>
      </interrupt>
      <interrupt>
        <name>CAN2_SCE</name>
        <description>CAN2 SCE interrupt</description>
        <value>66</value>
      </interrupt>
    </peripheral>
    <peripheral>
      <name>FLASH</name>
      <baseAddress>0x40023C00</baseAddress>
      <interrupt>
        <name>FLASH</name>
        <description>Flash global interrupt</description>
        <value>4</value>
      </interrupt>
#include "flash.svd.frag"
    </peripheral>
    <peripheral>
      <name>EXTI</name>
      <baseAddress>0x40013C00</baseAddress>
      <interrupt>
        <name>TAMP_STAMP</name>
        <description>Tamper and TimeStamp interrupts through the
        EXTI line</description>
        <value>2</value>
      </interrupt>
      <interrupt>
        <name>EXTI0</name>
        <description>EXTI Line0 interrupt</description>
        <value>6</value>
      </interrupt>
      <interrupt>
        <name>EXTI1</name>
        <description>EXTI Line1 interrupt</description>
        <value>7</value>
      </interrupt>
      <interrupt>
        <name>EXTI2</name>
        <description>EXTI Line2 interrupt</description>
        <value>8</value>
      </interrupt>
      <interrupt>
        <name>EXTI3</name>
        <description>EXTI Line3 interrupt</description>
        <value>9</value>
      </interrupt>
      <interrupt>
        <name>EXTI4</name>
        <description>EXTI Line4 interrupt</description>
        <value>10</value>
      </interrupt>
      <interrupt>
        <name>EXTI9_5</name>
        <description>EXTI Line[9:5] interrupts</description>
        <value>23</value>
      </interrupt>
      <interrupt>
        <name>EXTI15_10</name>
        <description>EXTI Line[15:10] interrupts</description>
        <value>40</value>
      </interrupt>
#include "exti.svd.frag"
    </peripheral>
    <peripheral>
      <name>OTG_HS_GLOBAL</name>
      <groupName>USB_OTG_HS</groupName>
      <baseAddress>0x40040000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xFFFC0400</size>
        <usage>registers</usage>
      </addressBlock>
      <addressBlock>
        <offset>0xFFFC0400</offset>
        <size>0x40000</size>
        <usage>reserved</usage>
      </addressBlock>
      <interrupt>
        <name>OTG_HS_EP1_OUT</name>
        <description>USB On The Go HS End Point 1 Out global
        interrupt</description>
        <value>74</value>
      </interrupt>
      <interrupt>
        <name>OTG_HS_EP1_IN</name>
        <description>USB On The Go HS End Point 1 In global
        interrupt</description>
        <value>75</value>
      </interrupt>
      <interrupt>
        <name>OTG_HS_WKUP</name>
        <description>USB On The Go HS Wakeup through EXTI
        interrupt</description>
        <value>76</value>
      </interrupt>
      <interrupt>
        <name>OTG_HS</name>
        <description>USB On The Go HS global
        interrupt</description>
        <value>77</value>
      </interrupt>
#define __USBOTG_HS
#include "usbotg_global.svd.frag"
    </peripheral>
    <peripheral>
      <name>OTG_HS_HOST</name>
      <groupName>USB_OTG_HS</groupName>
      <baseAddress>0x40040400</baseAddress>
#define __USBOTG_HS
#include "usbotg_host.svd.frag"
    </peripheral>
    <peripheral>
      <name>OTG_HS_DEVICE</name>
      <groupName>USB_OTG_HS</groupName>
      <baseAddress>0x40040800</baseAddress>
#define __USBOTG_HS
#include "usbotg_device.svd.frag"
    </peripheral>
    <peripheral>
      <name>OTG_HS_PWRCLK</name>
      <groupName>USB_OTG_HS</groupName>
      <baseAddress>0x40040E00</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x3F200</size>
        <usage>registers</usage>
      </addressBlock>
      <addressBlock>
        <offset>0x3F200</offset>
        <size>0xFFFC1200</size>
        <usage>reserved</usage>
      </addressBlock>
#define __USBOTG_HS
#include "usbotg_pwrclk.svd.frag"
    </peripheral>
#include "nvic.svd.frag"
#ifdef __HAVE_SAI
    <peripheral>
      <name>SAI</name>
      <baseAddress>0x40015800</baseAddress>
      <interrupt>
        <name>SAI1</name>
        <description>SAI1 global interrupt</description>
        <value>87</value>
      </interrupt>
#include "sai.svd.frag"
    </peripheral>
#endif
  </peripherals>
</device>
